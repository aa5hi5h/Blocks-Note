
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url= env("DATABASE_URL")
}

model Post {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId String
    title String
    description String
    image String?

    comments Comment[]
    likes PostVote[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Comment {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    message String
    post Post @relation(references: [id],fields: [postId],onDelete: Cascade )
    postId String @db.ObjectId
    userId String
    replyto Comment? @relation("Replyto",references: [id],fields: [replytoId],onDelete:NoAction,onUpdate: NoAction)
    replies Comment[] @relation("Replyto")
    replytoId String? @db.ObjectId
    likes CommentLike[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CommentLike{
 id String @id @default(auto()) @map("_id") @db.ObjectId
 userId String
 comment Comment @relation(fields: [commentId],references: [id],onDelete: Cascade)
 commentId String @db.ObjectId
 @@unique([userId,commentId])
}

model PostVote {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId String
    post Post @relation(fields: [postId],references: [id] , onDelete: Cascade)
    postId String @db.ObjectId
    @@unique([userId,postId])
}